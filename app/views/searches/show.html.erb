<div class="wrapper">
  <div id="search_content" class="medium_wrapper wrapper_padding clearfix">
    <header><h1>Resultados da Pesquisa</h1></header>
    <hr>
    <br>
    <div class="col-small">
      <h4>Adicionar Alerta de Preço</h4>
      <% if user_signed_in? %>
        <%= form_tag(add_alert_path,  :id => 'add_alert', :method => 'get' ) do %>
          <%= hidden_field_tag 'search_word', @search_word %>
          <div class="input-group">
            <input type="text" id="price" name="price" placeholder="R$ " onkeypress="return isNumberKey(event)" required/>
            <span class="input-group-btn">
              <button type="submit" class="button">
                   <i class="fa fa-plus"></i>
              </button>
            </span>
          </div>    
        <% end %>  
      <% else %>
        <li><%= link_to "Faça login para adicionar um alerta.", new_user_session_path %></li>
      <% end %>
      <h4>Selecionar Categorias</h4>
      <div id="categories"></div>
    </div>
      
    <div class="col-big">
      <%= high_chart("price_history", @chart) do |c|%>
        <%= raw "options.tooltip.formatter = function() {
          return '<b>Preço</b>: R$'+ parseFloat(this.y).toFixed(2);
        }" %>
      <% end %>  
      <table id="resultado" class="display responsive no-wrap">
        <thead>
            <tr>
              <th>Imagem</th>
              <th>Loja</th>
              <th style="display:none">Categoria</th>
              <th>Produto</th>
              <th>Preço</th>
            </tr>
        </thead>
        <tbody>
          <% @results.each do |r| %>
            <tr>
              <td><%= image_tag(r.image_link, :class => "productImg") %></td>
              <td class="nowrap">
                <%= image_tag(r.site.logo, :class => "site-logo") %>
                <%= rating_for r.site, "id" , :disable_after_rate => false %>
              </td>
              <td style="display:none"><%= r.category %></td>
              <td><%= link_to r.description.first(75) + '...', r.link, :target => '_blank' %></td>
              <td><%= currency_format(r.price) %></td>
            </tr>  
          <% end %>       
        </tbody>
      </table>
    </div>    
  </div>
</div>  

<% content_for :js do %>

function isNumberKey(evt){
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
    }

 $(document).ready(function () {
  var oTable = $('#resultado').dataTable({
      responsive: true,
      "oLanguage": {
              "sProcessing": "Aguarde enquanto os dados são carregados ...",
              "sLengthMenu": "Mostrar _MENU_ registros por pagina",
              "sZeroRecords": "Nenhum registro correspondente ao criterio encontrado",
              "sInfoEmtpy": "Exibindo 0 a 0 de 0 registros",
              "sInfo": "Exibindo de _START_ a _END_ de _TOTAL_ registros",
              "sInfoFiltered": "",
              "sSearch": "Procurar",
      "oPaginate": {
                  "sFirst": "Primeiro",
                  "sPrevious": "Anterior",
                  "sNext": "Próximo",
                  "sLast": "Último"
              }
          }
  });

  // Populate values
    var $rows = oTable.fnGetNodes();
    var values = {};
    var colnums = [3];

    for (var col = 0, n = colnums.length; col < n; col++) {

        var colnum = colnums[col];
        if (typeof values[colnum] === "undefined") values[colnum] = {};

        // Create Unique List of Values
        $('td:nth-child(' + colnum + ')', $rows).each(function () {
            values[colnum][$(this).text()] = 1;
        });

        // Create Checkboxes
        var labels = [];
        $.each(values[colnum], function (key, count) {
            var $checkbox = $('<input />', {
                'class': 'filter-column filter-column-' + colnum,
                    'type': 'checkbox',
                    'value': key
            });
            var $label = $('<label></label>', {
                'class': 'filter-container'
            }).append($checkbox).append(' ' + key);
            $checkbox.on('click', function () {
                oTable.fnDraw();
            }).data('colnum', colnum);
            labels.push($label.get(0));
        });
        var $sorted_containers = $(labels).sort(function (a, b) {
            return $(a).text().toLowerCase() > $(b).text().toLowerCase();
        });
        $('#categories').prepend($sorted_containers);
        $sorted_containers.wrapAll($('<div></div>', {
            'class': 'checkbox-group checkbox-group-column-' + colnum
        }));
    }

    $.fn.dataTableExt.afnFiltering.push(function (oSettings, aData, iDataIndex) {
        var checked = [];
        $('.filter-column').each(function () {
            var $this = $(this);
            if ($this.is(':checked')) checked.push($this);
        });

        if (checked.length) {
            var returnValue = false;
            $.each(checked, function (i, $obj) {
                if (aData[$obj.data('colnum') - 1] == $obj.val()) {
                    returnValue = true;
                    return false; // exit loop early
                }
            });

            return returnValue;
        }

        if (!checked.length) return true;
        return false;
    });


});
<% end %>